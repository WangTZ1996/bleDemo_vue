*, *:before, *:after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  overflow: hidden;
}

nav {
  z-index: 100;
}

#modal {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 100;
}

.none {
  display: none;
}

.bg-img {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.testBtn {
  width: 100px;
  height: 100px;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -50px;
  margin-left: -50px;
  background-color: red;
  z-index: 1;
}

:root {
  font-size: calc(16px + (20 - 16) * (100vw - 320px)/(980 - 320));
  --rotateTimes: 0;
}

body {
  color: #fff;
  font: 1em "Open Sans", sans-serif;
  height: 100vh;
  line-height: 1.5;
  filter: grayscale(1);
  font-size: 10vh;
}

nav, ul, li {
  transform-style: preserve-3d;
}

nav li {
  position: absolute;
  top: 50%;
  left: 50%;
}

nav, li a {
  border-radius: 50%;
}

nav {
  width: 100%;
  height: 100%;
  /* transform: translate(-50%, -50%) rotateX(75deg); */
}

ul, li a {
  /* width: 100%;
  height: 100%; */
}

ul {
  list-style: none;
  width: 100%;
  height: 100%;
}

li {
  animation: idle 4s ease-in-out infinite;
  text-align: center;
  width: 100%;
  height: 100%;
  transform: translate(-50%, -50%);
}

li a {
  /* transform: translateX(-50%); */
  position: absolute;
  color: currentColor;
  display: inline-block;
  text-decoration: none;
  transition: transform 0.4s linear, box-shadow 0.15s linear, margin 0.1s linear, width 0.1s linear, height 0.1s linear;
}

li a span {
  transition: color 0.15s linear;
}

li a:before {
  background-color: #fff;
  border-radius: 50%;
  content: "";
  display: block;
  opacity: 1;
  position: absolute;
  top: 15%;
  left: 15%;
  width: 20%;
  height: 10%;
  transform: rotate(-45deg);
}

/* li a:focus, li a.current {
    box-shadow: 0 0 0 0.1em #ff0 inset, 0 0 1em #ff0 inset;
    outline: 0;
  }
  li a:focus span, li a.current span {
    color: #ff0;
  } */
/* li a:hover {
  margin: -5% 0 0 -5%;
  width: 110%;
  height: 110%;
} */

li a:hover svg {
  width: 3em;
  height: 3em;
}

@media (prefers-reduced-motion) {
  li {
    animation: none;
  }
}

svg {
  display: block;
  margin: 1.25em auto 1.5em auto;
  transition: width 0.1s linear, height 0.1s linear;
  width: 2.5em;
  height: 2.5em;
}

/* Position bubbles */
li:nth-of-type(1) {
  animation-delay: 0s;
}

li:nth-of-type(1) a {
  width: 4.5em;
  height: 4.5em;
  left: 100px;
  bottom: 0;
  /* transform: translate(-50%, -50vh); */
  background-color: #51c4d3;
  box-shadow: 0 0 0 0.1em rgb(0, 174, 255) inset, 0 0 1em rgb(0, 174, 255) inset;
  /* transform: rotate(calc(0deg + var(--rotateTimes) * 51.4285714286deg)) translateY(9em) rotate(calc(0deg - var(--rotateTimes) * 51.4285714286deg)) rotateX(-75deg); */
}

li:nth-of-type(2) {
  animation-delay: -0.5s;
}

li:nth-of-type(2) a {
  width: 7em;
  height: 7em;
  transform: translate(-140%, 0);
  background-color: rgba(255, 145, 0, 0.5);
  box-shadow: 0 0 0 0.1em rgb(255, 145, 0) inset, 0 0 1em rgb(255, 145, 0) inset;
  /* transform: rotate(calc(-51.4285714286deg + var(--rotateTimes) * 51.4285714286deg)) translateY(9em) rotate(calc(51.4285714286deg - var(--rotateTimes) * 51.4285714286deg)) rotateX(-75deg); */
}

li:nth-of-type(3) {
  animation-delay: -1s;
}

li:nth-of-type(3) a {
  width: 4em;
  height: 4em;
  /* transform: translate(-140%, -30vh); */
  background-color: rgba(238, 255, 0, 0.5);
  box-shadow: 0 0 0 0.1em rgb(238, 255, 0) inset, 0 0 1em rgb(238, 255, 0) inset;
  /* transform: rotate(calc(251deg + var(--rotateTimes) * 51.4285714286deg)) translateY(12em) rotate(calc(102.8571428571deg - var(--rotateTimes) * 51.4285714286deg)) rotateX(-75deg); */
}

li:nth-of-type(4) {
  animation-delay: -1.5s;
}

li:nth-of-type(4) a {
  width: 7.5em;
  height: 7.5em;
  /* transform: translate(45%, -10%); */
  background-color: rgba(0, 38, 255, 0.5);
  box-shadow: 0 0 0 0.1em rgb(0, 38, 255) inset, 0 0 1em rgb(0, 38, 255) inset;
  /* transform: rotate(calc(-154.2857142857deg + var(--rotateTimes) * 51.4285714286deg)) translateY(9em) rotate(calc(154.2857142857deg - var(--rotateTimes) * 51.4285714286deg)) rotateX(-75deg); */
}

li:nth-of-type(5) {
  animation-delay: -2s;
}

li:nth-of-type(5) a {
  width: 5.5em;
  height: 5.5em;
  /* transform: translate(-50%, 0vh); */
  background-color: rgba(153, 0, 255, 0.5);
  box-shadow: 0 0 0 0.1em rgb(153, 0, 255) inset, 0 0 1em rgb(153, 0, 255) inset;
  /* transform: rotate(calc(-205.7142857143deg + var(--rotateTimes) * 51.4285714286deg)) translateY(9em) rotate(calc(205.7142857143deg - var(--rotateTimes) * 51.4285714286deg)) rotateX(-75deg); */
}

li:nth-of-type(6) {
  animation-delay: -2.5s;
}

li:nth-of-type(6) a {
  width: 5em;
  height: 5em;
  /* transform: translate(50%, -55vh); */
  background-color: rgba(9, 255, 0, 0.5);
  box-shadow: 0 0 0 0.1em rgb(9, 255, 0) inset, 0 0 1em rgb(9, 255, 0) inset;
  /* transform: rotate(calc(122deg + var(--rotateTimes) * 51.4285714286deg)) translateY(12em) rotate(calc(245deg - var(--rotateTimes) * 210deg)) rotateX(282deg); */
}

li:nth-of-type(7) {
  animation-delay: -3s;
}

li:nth-of-type(7) a {
  width: 7em;
  height: 7em;
  /* transform: translate(-180%, -56vh); */
  background-color: rgba(255, 0, 0, 0.5);
  box-shadow: 0 0 0 0.1em rgb(255, 0, 0) inset, 0 0 1em rgb(255, 0, 0);
  /* transform: rotate(calc(48deg + var(--rotateTimes) * 332deg)) translateY(8em) rotate(calc(315deg - var(--rotateTimes) * 334deg)) rotateX(286deg); */
}

/* Animations */
.rise {
  animation: rise 1s ease-out;
}

.rise a {
  animation: fadeOut 1s ease-out;
}

.rise a.pop {
  animation: pop 1s linear;
}

.rise a.pop svg, .rise a.pop span {
  visibility: hidden;
}

.bleConnect {
  animation: bleConnect 2s linear;
  animation-fill-mode: forwards
}

.bleDisConnect {
  animation: bleDisConnect 2s linear;
  animation-fill-mode: forwards
}

@keyframes bleConnect {
  from {
    filter: grayscale(1);
  }

  to {
    filter: grayscale(0);
  }
}

@keyframes bleDisConnect {
  from {
    filter: grayscale(0);
  }

  to {
    filter: grayscale(1);
  }
}

@keyframes rise {
  from {
    transform: translateZ(0);
  }

  15% {
    transform: translateZ(-1em);
  }

  to {
    transform: translateZ(35em);
  }
}

@keyframes fadeOut {
  from, 15% {
    opacity: 1;
  }

  50%, to {
    opacity: 0;
  }
}

@keyframes pop {
  from {
    margin: -5% 0 0 -5%;
    width: 110%;
    height: 110%;
    opacity: 1;
  }

  10%, to {
    margin: -20% 0 0 -20%;
    width: 140%;
    height: 140%;
    opacity: 0;
  }
}

@keyframes idle {
  from, to {
    transform: translate(-50%, -48%);
  }

  25% {
    transform: translate(-52%, -50%);
  }

  50% {
    transform: translate(-50%, -52%);
  }

  75% {
    transform: translate(-48%, -50%);
  }
}